[package]
name = "oro"
version = "0.1.0"
authors = ["Karl Grasegger <karl.grasegger@gebruederheitz.de>"]
edition = "2018"

[lib]
crate-type = ["cdylib"]

[dependencies]
anyhow = "1.0.27"
cfg-if = "0.1.5"
wasm-bindgen = { version = "0.2.59", features = ["serde-serialize"]  }
js-sys = "0.3.36"
wasm-bindgen-futures = "0.4.9"
serde = { version = "1.0.80", features = ["derive"] }
serde_derive = "^1.0.59"
serde_json = "1.0"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.5", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however. Also as of wee_alloc v0.4.2, does not yet work on stable
# (tested with rust v1.31.1).
wee_alloc = { version = "0.4.2", optional = true }

strum = "0.18"
strum_macros = "0.18"

[dependencies.yew]
version = "0.14.1"
features = ["web_sys"]

[dependencies.yew-router]
version = "0.14.0"
features = ["web_sys"]

[dependencies.web-sys]
version = "0.3"
features = [
  'Document',
  'Element',
  'HtmlElement',
  'Node',
  'Window',
  'console',
  'NodeList',
  'HtmlInputElement',
  'Headers',
  'Request',
  'RequestInit',
  'RequestMode',
  'Response',
  'RequestCache',
  'Headers'
]

[features]
default = ["console_error_panic_hook"]


